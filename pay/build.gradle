def currentModule = rootProject.ext.modules.pay
if (currentModule.isRunAlone) {
    apply plugin: 'com.android.application'
    apply plugin: 'cn.hikyson.methodcanary.plugin'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    def moduleName = project.getName()
    // 业务组件资源前缀，避免冲突
    resourcePrefix "${moduleName}_"

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //单独运行时，设置applicationId
        if(currentModule.isRunAlone){
            applicationId currentModule.applicationId
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME : project.getName() ]
            }
        }
    }

    sourceSets {
        main {
            if (currentModule.isRunAlone) {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':base')
    annotationProcessor  rootProject.ext.dependencies["arouter-compiler"]
}
